<!--
  ~ Copyright (c) 2014 T-Systems Multimedia Solutions GmbH
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:f="/lib/form">
    <f:block>
        <p>
            Currently no visual configuration.
            Always pass a Handle object from the <i>triggerRemoteJob</i> Step to the pullPerfSigReports step.
            e.g.
        </p>
        <pre>def handle = triggerRemoteJob job: 'demoJob', remoteJenkinsName: 'myJenkins'</pre>
        <pre>pullPerfSigReports handle: handle</pre>
        <br/>
    </f:block>

    <f:entry title="${%ignore Performance Signature data}" field="ignorePerfSigData"
             description="${%Ignore downloading and parsing Performance Signature data?}">
        <f:checkbox default="${descriptor.defaultIgnorePerfSigData}"/>
    </f:entry>
    <f:entry title="${%Non-functional failure behaviour}" field="nonFunctionalFailure"
             description="${%Should the plugin modify the build result in case of any Dynatrace incidents?}">
        <f:radio name="nonFunctionalFailure" value="0"
                 checked="${instance.nonFunctionalFailure == 0 || instance.nonFunctionalFailure == null}"
                 title="do nothing"/>
        <br/>
        <f:radio name="nonFunctionalFailure" value="1" checked="${instance.nonFunctionalFailure == 1}"
                 title="set build result to failed in case of severe incidents"/>
        <br/>
        <f:radio name="nonFunctionalFailure" value="2" checked="${instance.nonFunctionalFailure == 2}"
                 title="set build result to failed in case of severe/warning incidents"/>
        <br/>
        <f:radio name="nonFunctionalFailure" value="3" checked="${instance.nonFunctionalFailure == 3}"
                 title="set build result to unstable in case of severe incidents"/>
        <br/>
        <f:radio name="nonFunctionalFailure" value="4" checked="${instance.nonFunctionalFailure == 4}"
                 title="set build result to unstable in case of severe/warning incidents"/>
    </f:entry>
</j:jelly>
