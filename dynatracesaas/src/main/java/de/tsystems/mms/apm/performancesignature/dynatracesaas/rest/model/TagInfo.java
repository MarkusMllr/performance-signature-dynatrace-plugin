/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace REST API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.tsystems.mms.apm.performancesignature.dynatracesaas.rest.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Arrays;

import static de.tsystems.mms.apm.performancesignature.ui.util.PerfSigUIUtils.toIndentedString;

/**
 * Tag of a Dynatrace entity.
 */
@ApiModel(description = "Tag of a Dynatrace entity.")

public class TagInfo {
    @SerializedName("context")
    private ContextEnum context = null;
    @SerializedName("key")
    private String key = null;
    @SerializedName("value")
    private String value = null;

    public TagInfo context(ContextEnum context) {
        this.context = context;
        return this;
    }

    /**
     * The origin of the tag, like AWS or Cloud Foundry.   Custom tags use the &#x60;CONTEXTLESS&#x60; value.
     *
     * @return context
     **/
    @ApiModelProperty(value = "The origin of the tag, like AWS or Cloud Foundry.   Custom tags use the `CONTEXTLESS` value.")
    public ContextEnum getContext() {
        return context;
    }

    public void setContext(ContextEnum context) {
        this.context = context;
    }

    public TagInfo key(String key) {
        this.key = key;
        return this;
    }

    /**
     * The key of the tag.   Custom tags have the tag value here.
     *
     * @return key
     **/
    @ApiModelProperty(required = true, value = "The key of the tag.   Custom tags have the tag value here.")
    public String getKey() {
        return key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    public TagInfo value(String value) {
        this.value = value;
        return this;
    }

    /**
     * The value of the tag.   Not applicable to custom tags.
     *
     * @return value
     **/
    @ApiModelProperty(value = "The value of the tag.   Not applicable to custom tags.")
    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    @Override
    public String toString() {
        return "class TagInfo {\n" +
                "    context: " + toIndentedString(context) + "\n" +
                "    key: " + toIndentedString(key) + "\n" +
                "    value: " + toIndentedString(value) + "\n" +
                "}";
    }

    /**
     * The origin of the tag, like AWS or Cloud Foundry.   Custom tags use the &#x60;CONTEXTLESS&#x60; value.
     */
    @JsonAdapter(ContextEnum.Adapter.class)
    public enum ContextEnum {
        CONTEXTLESS("CONTEXTLESS"),
        AWS("AWS"),
        ENVIRONMENT("ENVIRONMENT"),
        CLOUD_FOUNDRY("CLOUD_FOUNDRY"),
        KUBERNETES("KUBERNETES"),
        GOOGLE_CLOUD("GOOGLE_CLOUD");

        private String value;

        ContextEnum(String value) {
            this.value = value;
        }

        public static ContextEnum fromValue(String text) {
            return Arrays.stream(ContextEnum.values()).filter(b -> b.value.equals(text)).findFirst().orElse(null);
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return value;
        }

        public static class Adapter extends TypeAdapter<ContextEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ContextEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public ContextEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return ContextEnum.fromValue(value);
            }
        }
    }
}

