/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace REST API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.tsystems.mms.apm.performancesignature.dynatracesaas.rest.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

import static de.tsystems.mms.apm.performancesignature.ui.util.PerfSigUIUtils.toIndentedString;

/**
 * Information about one Synthetic Tests
 */
@ApiModel(description = "Information about one Synthetic Tests")

public class ExternalSyntheticTest {
    @SerializedName("id")
    private String id;

    @SerializedName("title")
    private String title;

    @SerializedName("description")
    private String description;

    @SerializedName("testSetup")
    private String testSetup;

    @SerializedName("expirationTimestamp")
    private Long expirationTimestamp;

    @SerializedName("drilldownLink")
    private String drilldownLink;

    @SerializedName("editLink")
    private String editLink;

    @SerializedName("enabled")
    private Boolean enabled;

    @SerializedName("deleted")
    private Boolean deleted;

    @SerializedName("locations")
    private List<SyntheticTestLocation> locations;

    @SerializedName("steps")
    private List<SyntheticTestStep> steps;

    @SerializedName("noDataTimeout")
    private Integer noDataTimeout;

    @SerializedName("scheduleIntervalInSeconds")
    private Integer scheduleIntervalInSeconds;

    public ExternalSyntheticTest id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Unique id which identifies the test.
     *
     * @return id
     **/
    @ApiModelProperty(required = true, value = "Unique id which identifies the test.")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public ExternalSyntheticTest title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Test title.
     *
     * @return title
     **/
    @ApiModelProperty(value = "Test title.")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public ExternalSyntheticTest description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Test description.
     *
     * @return description
     **/
    @ApiModelProperty(value = "Test description.")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public ExternalSyntheticTest testSetup(String testSetup) {
        this.testSetup = testSetup;
        return this;
    }

    /**
     * Test setup information.
     *
     * @return testSetup
     **/
    @ApiModelProperty(example = "browser", value = "Test setup information.")
    public String getTestSetup() {
        return testSetup;
    }

    public void setTestSetup(String testSetup) {
        this.testSetup = testSetup;
    }

    public ExternalSyntheticTest expirationTimestamp(Long expirationTimestamp) {
        this.expirationTimestamp = expirationTimestamp;
        return this;
    }

    /**
     * Date as timestamp in millis UTC Dynatrace Cluster Time when this test automatically expires.
     *
     * @return expirationTimestamp
     **/
    @ApiModelProperty(value = "Date as timestamp in millis UTC Dynatrace Cluster Time when this test automatically expires.")
    public Long getExpirationTimestamp() {
        return expirationTimestamp;
    }

    public void setExpirationTimestamp(Long expirationTimestamp) {
        this.expirationTimestamp = expirationTimestamp;
    }

    public ExternalSyntheticTest drilldownLink(String drilldownLink) {
        this.drilldownLink = drilldownLink;
        return this;
    }

    /**
     * An URL to link to this test results.
     *
     * @return drilldownLink
     **/
    @ApiModelProperty(value = "An URL to link to this test results.")
    public String getDrilldownLink() {
        return drilldownLink;
    }

    public void setDrilldownLink(String drilldownLink) {
        this.drilldownLink = drilldownLink;
    }

    public ExternalSyntheticTest editLink(String editLink) {
        this.editLink = editLink;
        return this;
    }

    /**
     * Link back to where the user can edit that test in the original UI.
     *
     * @return editLink
     **/
    @ApiModelProperty(value = "Link back to where the user can edit that test in the original UI.")
    public String getEditLink() {
        return editLink;
    }

    public void setEditLink(String editLink) {
        this.editLink = editLink;
    }

    public ExternalSyntheticTest enabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Enabled state. Defaults to true.
     *
     * @return enabled
     **/
    @ApiModelProperty(value = "Enabled state. Defaults to true.")
    public Boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public ExternalSyntheticTest deleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * Deletion state of a test. Additionally set enabled to false if this field is set to true. Defaults to false.
     *
     * @return deleted
     **/
    @ApiModelProperty(value = "Deletion state of a test. Additionally set enabled to false if this field is set to true. Defaults to false.")
    public Boolean isDeleted() {
        return deleted;
    }

    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public ExternalSyntheticTest locations(List<SyntheticTestLocation> locations) {
        this.locations = locations;
        return this;
    }

    public ExternalSyntheticTest addLocationsItem(SyntheticTestLocation locationsItem) {
        if (this.locations == null) {
            this.locations = new ArrayList<>();
        }
        this.locations.add(locationsItem);
        return this;
    }

    /**
     * One or more locations where this test runs.
     *
     * @return locations
     **/
    @ApiModelProperty(value = "One or more locations where this test runs.")
    public List<SyntheticTestLocation> getLocations() {
        return locations;
    }

    public void setLocations(List<SyntheticTestLocation> locations) {
        this.locations = locations;
    }

    public ExternalSyntheticTest steps(List<SyntheticTestStep> steps) {
        this.steps = steps;
        return this;
    }

    public ExternalSyntheticTest addStepsItem(SyntheticTestStep stepsItem) {
        if (this.steps == null) {
            this.steps = new ArrayList<>();
        }
        this.steps.add(stepsItem);
        return this;
    }

    /**
     * One or more steps with their metainfo within a synthetic test.
     *
     * @return steps
     **/
    @ApiModelProperty(value = "One or more steps with their metainfo within a synthetic test.")
    public List<SyntheticTestStep> getSteps() {
        return steps;
    }

    public void setSteps(List<SyntheticTestStep> steps) {
        this.steps = steps;
    }

    public ExternalSyntheticTest noDataTimeout(Integer noDataTimeout) {
        this.noDataTimeout = noDataTimeout;
        return this;
    }

    /**
     * Timeout in milliseconds - after this time has passed and no result has been sent for this test we will switch the availability state to unmonitored. Defaults to 2 * scheduleIntervalInSec.
     *
     * @return noDataTimeout
     **/
    @ApiModelProperty(value = "Timeout in milliseconds - after this time has passed and no result has been sent for this test we will switch the availability state to unmonitored. Defaults to 2 * scheduleIntervalInSec.")
    public Integer getNoDataTimeout() {
        return noDataTimeout;
    }

    public void setNoDataTimeout(Integer noDataTimeout) {
        this.noDataTimeout = noDataTimeout;
    }

    public ExternalSyntheticTest scheduleIntervalInSeconds(Integer scheduleIntervalInSeconds) {
        this.scheduleIntervalInSeconds = scheduleIntervalInSeconds;
        return this;
    }

    /**
     * Schedule in seconds.
     *
     * @return scheduleIntervalInSeconds
     **/
    @ApiModelProperty(required = true, value = "Schedule in seconds.")
    public Integer getScheduleIntervalInSeconds() {
        return scheduleIntervalInSeconds;
    }

    public void setScheduleIntervalInSeconds(Integer scheduleIntervalInSeconds) {
        this.scheduleIntervalInSeconds = scheduleIntervalInSeconds;
    }

    @Override
    public String toString() {
        return "class ExternalSyntheticTest {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    title: " + toIndentedString(title) + "\n" +
                "    description: " + toIndentedString(description) + "\n" +
                "    testSetup: " + toIndentedString(testSetup) + "\n" +
                "    expirationTimestamp: " + toIndentedString(expirationTimestamp) + "\n" +
                "    drilldownLink: " + toIndentedString(drilldownLink) + "\n" +
                "    editLink: " + toIndentedString(editLink) + "\n" +
                "    enabled: " + toIndentedString(enabled) + "\n" +
                "    deleted: " + toIndentedString(deleted) + "\n" +
                "    locations: " + toIndentedString(locations) + "\n" +
                "    steps: " + toIndentedString(steps) + "\n" +
                "    noDataTimeout: " + toIndentedString(noDataTimeout) + "\n" +
                "    scheduleIntervalInSeconds: " + toIndentedString(scheduleIntervalInSeconds) + "\n" +
                "}";
    }
}

